#cloud-config
# Modify this file to include your keys, unit, configuration ....
# Have a look at https://github.com/coreos/coreos-cloudinit

ssh_authorized_keys:
  - ssh-rsa AAAAB3................lQG+2/v

hostname: coreos

users:
  - name: jriguera
    passwd: $1$YsYMmJa7$yDsdhenAvsiiRuYWYLHiP1
    groups:
      - sudo
      - docker
      - core
      - wheel

write_files:
    - path: /home/core/.dockercfg
      owner: core:core
      permissions: 0644
      content: |
        {
          "https://index.docker.io/v1/": {
            "auth": "xXxXxXxXxXx=",
            "email": "username@example.com"
          }
        }
    - path: /etc/systemd/network/static.network
      content: |
        [Match]
        MACAddress=00:1c:c4:87:c5:2e
        [Network]
        Gateway=192.168.1.1
        Address=192.168.1.5/24
        DNS=8.8.8.8

# Note: The IP static configuration will not work because your MAC does not
# match with this one!!


coreos:
  etcd2:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=3
    discovery: https://discovery.etcd.io/<token>
    # multi-region and multi-cloud deployments need to use $public_ipv4
    advertise-client-urls: http://$public_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    # listen on both the official ports and the legacy ports
    # legacy ports can be omitted if your application doesn't depend on them
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001

  fleet:
      public-ip: $public_ipv4
      metadata: key=value

  update:
    reboot-strategy: etcd-lock

#  units:
#    - name: docker-redis.service
#      command: start
#      content: |
#        [Unit]
#        Description=Redis container
#        Author=Me
#        After=docker.service
#
#        [Service]
#        Restart=always
#        ExecStart=/usr/bin/docker start -a redis_server
#        ExecStop=/usr/bin/docker stop -t 2 redis_server

